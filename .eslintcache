[{"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/App.test.tsx":"1","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/App.tsx":"2","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/api/auth.ts":"3","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/app/hooks.ts":"4","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/app/store.ts":"5","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Footer/Footer.tsx":"6","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Landing_Page/Body.tsx":"7","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Navbar/Navbar.tsx":"8","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Navbar/NavbarLogin.tsx":"9","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Navbar/NavbarNoButton.tsx":"10","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Navbar/NavbarSubscribe.tsx":"11","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Routes.tsx":"12","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/auth/LogInPage.tsx":"13","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/auth/SignUpPage.tsx":"14","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/signup.tsx":"15","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/styleObjects/modals.tsx":"16","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/styleObjects/signupStyle.tsx":"17","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/styleObjects/subscribeStyle.tsx":"18","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/subscribe.tsx":"19","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/error_handling/auth-errors.tsx":"20","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/firebase-config.js":"21","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/index.tsx":"22","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Education.tsx":"23","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Homelessness.tsx":"24","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/LandingPage.tsx":"25","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Login.tsx":"26","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Municipal.tsx":"27","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Profile.tsx":"28","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Subscribe.tsx":"29","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/sign-up/SignUp.tsx":"30","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/react-app-env.d.ts":"31","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/reportWebVitals.ts":"32","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/sagas/exampleSaga.ts":"33","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/setupTests.ts":"34","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/slices/loginSlice.tsx":"35","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/slices/subscribeSlice.tsx":"36","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/index.js":"37","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/models/category.js":"38","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/models/tier.js":"39","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/models/user.js":"40","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/models/visualization.js":"41","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/routes/category.js":"42","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/routes/tier.js":"43","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/routes/user.js":"44","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/routes/visualization.js":"45","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/services/tier.js":"46"},{"size":372,"mtime":1677827467978,"results":"47","hashOfConfig":"48"},{"size":203,"mtime":1677827467978,"results":"49","hashOfConfig":"48"},{"size":535,"mtime":1677828031677,"results":"50","hashOfConfig":"48"},{"size":362,"mtime":1677827467981,"results":"51","hashOfConfig":"48"},{"size":875,"mtime":1677827467981,"results":"52","hashOfConfig":"48"},{"size":1274,"mtime":1677827467981,"results":"53","hashOfConfig":"48"},{"size":2300,"mtime":1677827467981,"results":"54","hashOfConfig":"48"},{"size":1609,"mtime":1677827467982,"results":"55","hashOfConfig":"48"},{"size":464,"mtime":1677827467982,"results":"56","hashOfConfig":"48"},{"size":286,"mtime":1677827467982,"results":"57","hashOfConfig":"48"},{"size":568,"mtime":1677827467982,"results":"58","hashOfConfig":"48"},{"size":1129,"mtime":1677827467983,"results":"59","hashOfConfig":"48"},{"size":5533,"mtime":1677828031769,"results":"60","hashOfConfig":"48"},{"size":10146,"mtime":1677828031796,"results":"61","hashOfConfig":"48"},{"size":1810,"mtime":1677827467983,"results":"62","hashOfConfig":"48"},{"size":900,"mtime":1677827467983,"results":"63","hashOfConfig":"48"},{"size":709,"mtime":1677827467984,"results":"64","hashOfConfig":"48"},{"size":710,"mtime":1677827467984,"results":"65","hashOfConfig":"48"},{"size":1888,"mtime":1677827467984,"results":"66","hashOfConfig":"48"},{"size":1536,"mtime":1677828031883,"results":"67","hashOfConfig":"48"},{"size":525,"mtime":1677829049260,"results":"68","hashOfConfig":"48"},{"size":687,"mtime":1677827467984,"results":"69","hashOfConfig":"48"},{"size":108,"mtime":1677827467984,"results":"70","hashOfConfig":"48"},{"size":114,"mtime":1677827467984,"results":"71","hashOfConfig":"48"},{"size":279,"mtime":1677827467984,"results":"72","hashOfConfig":"48"},{"size":158,"mtime":1677828031907,"results":"73","hashOfConfig":"48"},{"size":108,"mtime":1677827467985,"results":"74","hashOfConfig":"48"},{"size":104,"mtime":1677827467985,"results":"75","hashOfConfig":"48"},{"size":108,"mtime":1677827467985,"results":"76","hashOfConfig":"48"},{"size":196,"mtime":1677828031915,"results":"77","hashOfConfig":"48"},{"size":40,"mtime":1673293216246,"results":"78","hashOfConfig":"48"},{"size":438,"mtime":1677827467985,"results":"79","hashOfConfig":"48"},{"size":1122,"mtime":1677827467985,"results":"80","hashOfConfig":"48"},{"size":255,"mtime":1677827467985,"results":"81","hashOfConfig":"48"},{"size":582,"mtime":1677827467986,"results":"82","hashOfConfig":"48"},{"size":634,"mtime":1677827467986,"results":"83","hashOfConfig":"48"},{"size":860,"mtime":1677828211892,"results":"84","hashOfConfig":"85"},{"size":305,"mtime":1677827467986,"results":"86","hashOfConfig":"85"},{"size":273,"mtime":1677827467986,"results":"87","hashOfConfig":"85"},{"size":414,"mtime":1677828211904,"results":"88","hashOfConfig":"85"},{"size":387,"mtime":1677827467987,"results":"89","hashOfConfig":"85"},{"size":1590,"mtime":1677827467987,"results":"90","hashOfConfig":"85"},{"size":1567,"mtime":1677829048495,"results":"91","hashOfConfig":"85"},{"size":1756,"mtime":1677829048495,"results":"92","hashOfConfig":"85"},{"size":1611,"mtime":1677827467988,"results":"93","hashOfConfig":"85"},{"size":322,"mtime":1677829049413,"results":"94","hashOfConfig":"85"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},"laulh2",{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166"},{"filePath":"167","messages":"168","suppressedMessages":"169","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174"},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":15,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193"},{"filePath":"194","messages":"195","suppressedMessages":"196","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197"},{"filePath":"198","messages":"199","suppressedMessages":"200","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201"},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209"},{"filePath":"210","messages":"211","suppressedMessages":"212","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213"},{"filePath":"214","messages":"215","suppressedMessages":"216","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"217"},{"filePath":"218","messages":"219","suppressedMessages":"220","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221"},{"filePath":"222","messages":"223","suppressedMessages":"224","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225"},{"filePath":"226","messages":"227","suppressedMessages":"228","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229"},{"filePath":"230","messages":"231","suppressedMessages":"232","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"233"},{"filePath":"234","messages":"235","suppressedMessages":"236","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237"},{"filePath":"238","messages":"239","suppressedMessages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"o9urai",{"filePath":"241","messages":"242","suppressedMessages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","suppressedMessages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"250","messages":"251","suppressedMessages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","suppressedMessages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","suppressedMessages":"258","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"262","messages":"263","suppressedMessages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"265","messages":"266","suppressedMessages":"267","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/App.test.tsx",["268"],[],"import React from \"react\";\nimport { render } from \"@testing-library/react\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\nimport App from \"./App\";\n\ntest(\"renders learn react link\", () => {\n  const { getByText } = render(\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n\n  expect(getByText(/learn/i)).toBeInTheDocument();\n});\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/App.tsx",["269"],[],"import \"./App.css\";\nimport { Routes } from \"./components/Routes\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Routes />\n      <div className=\"App\"></div>\n    </>\n  );\n};\n\nexport default App;\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/api/auth.ts",["270"],[],"import type { UserCredential } from \"firebase/auth\";\n\nconst registerUser = async (\n  userCredential: UserCredential\n): Promise<Response> => {\n  const requestOptions = {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      username: userCredential.user.displayName,\n      email: userCredential.user.email,\n      tier: 1,\n    }),\n  };\n  const response = await fetch(\n    \"http://localhost:3001/api/user/create\",\n    requestOptions\n  );\n  return response;\n};\n\nexport { registerUser };\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/app/hooks.ts",["271"],[],"import {\n  type TypedUseSelectorHook,\n  useDispatch,\n  useSelector,\n} from \"react-redux\";\nimport type { RootState, AppDispatch } from \"./store\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/app/store.ts",["272"],[],"import {\n  configureStore,\n  type ThunkAction,\n  type Action,\n} from \"@reduxjs/toolkit\";\nimport loginReducer from \"../slices/loginSlice\";\nimport subscribeReducer from \"../slices/subscribeSlice\";\nimport createSagaMiddleware from \"redux-saga\";\n\n// Create the saga middleware\nconst sagaMiddleware = createSagaMiddleware();\nconst middleware = [sagaMiddleware];\n\nexport const store = configureStore({\n  reducer: {\n    login: loginReducer,\n    subscribe: subscribeReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(middleware),\n});\n\n// Then run the saga\n// uncomment when root saga is made\n// sagaMiddleware.run(rootSaga)\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Footer/Footer.tsx",["273"],[],"import { FaFacebookF, FaTwitter, FaInstagram, FaYoutube } from \"react-icons/fa\";\nimport \"./Footer.css\";\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer className=\"footer\">\n      <div className=\"footer-left\">\n        <h3>San Diego Taxpayers Association</h3>\n        <p>\n          The San Diego Taxpayers Educational Foundation conducts independent\n          research studies on various issue areas to educate San Diegans and\n          inform the advocacy efforts of the Association.\n        </p>\n      </div>\n      <div className=\"footer-right\">\n        <div className=\"address\">\n          <p>2508 Historic Decatur Rd. #220</p>\n          <p>San Diego, CA 92106</p>\n\n          <p>Contact: info@sdcta.org</p>\n        </div>\n        <div className=\"social-icons\">\n          <a href=\"https://www.facebook.com/sdcta\">\n            <FaFacebookF className=\"icon\" />\n          </a>\n          <a href=\"https://twitter.com/sdcta\">\n            <FaTwitter className=\"icon\" />\n          </a>\n          <a href=\"https://www.instagram.com/sdcta\">\n            <FaInstagram className=\"icon\" />\n          </a>\n          <a href=\"https://www.linkedin.com/company/sdcta\">\n            <FaYoutube className=\"icon\" />\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Landing_Page/Body.tsx",["274"],[],"import landscape from \"./../../Images/Landing_Image.jpg\";\nimport \"./body.css\";\nimport EducationVis from \"./../../Images/Education_Standin.png\";\nimport HomelessnessVis from \"./../../Images/Homelessness_Standin.png\";\nimport MunicipalVis from \"./../../Images/Municipal_Standin.png\";\n\nexport const Body: React.FC = () => {\n  return (\n    <>\n      <div>\n        <div className=\"heading\">SDTEF Data Museum</div>\n        <div className=\"description\">\n          Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do\n          eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad\n          minim veniam, sed do eiusmod tempor incididunt ut labore et dolore\n          magna aliqua. Ut enim ad minim veniam, sed do eiusmod tempor\n          incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam,\n        </div>\n        <img src={landscape} alt=\"sd landscape\" />\n      </div>\n      <div className=\"image_line\">\n        <div className=\"first_Visual\">\n          <div className=\"img\">\n            <img src={EducationVis} alt=\"Education Visualization\"></img>\n          </div>\n          <div className=\"image_line-heading\">Education</div>\n          <div className=\"image_line-description\">\n            Lorem ipsum dolor sit amet, sed do consectetur adipiscing elit, sed\n            do eiusmod tempor incididunt ut labore et\n          </div>\n        </div>\n        <div className=\"second_Visual\">\n          <div className=\"img\">\n            <img src={HomelessnessVis} alt=\"Homelessness Visualization\"></img>\n          </div>\n          <div className=\"image_line-heading\">Homelessness</div>\n          <div className=\"image_line-description\">\n            Lorem ipsum dolor sit amet, sed do consectetur adipiscing elit, sed\n            do eiusmod tempor incididunt ut labore et\n          </div>\n        </div>\n        <div className=\"third_Visual\">\n          <div className=\"img\">\n            <img src={MunicipalVis} alt=\"Municipal Visualization\"></img>\n          </div>\n          <div className=\"image_line-heading\">Municipal</div>\n          <div className=\"image_line-description\">\n            Lorem ipsum dolor sit amet, sed do consectetur adipiscing elit, sed\n            do eiusmod tempor incididunt ut labore et\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Navbar/Navbar.tsx",["275"],[],"import { NavLink } from \"react-router-dom\";\nimport { useAppSelector } from \"../../app/hooks\";\nimport { NavbarLogin } from \"./NavbarLogin\";\nimport { NavbarSubscribe } from \"./NavbarSubscribe\";\nimport { NavbarNoButton } from \"./NavbarNoButton\";\nimport \"./Navbar.css\";\nimport logo from \"./SDTEF Logo Transparent Background 1.svg\";\nimport { selectLogin } from \"../../slices/loginSlice\";\nimport { selectSubscribe } from \"../../slices/subscribeSlice\";\nexport const Navbar: React.FC = () => {\n  const isLoggedIn = useAppSelector(selectLogin);\n  const isSubscribed = useAppSelector(selectSubscribe);\n  const links = [\n    {\n      name: \"Data Museum\",\n      route: \"/\",\n    },\n    {\n      name: \"Education\",\n      route: \"/Education\",\n    },\n    {\n      name: \"Homelessness\",\n      route: \"/Homelessness\",\n    },\n    {\n      name: \"Municipal\",\n      route: \"/Municipal\",\n    },\n  ];\n  return (\n    <nav>\n      <a href=\"https://sdtef.org/\">\n        <img src={logo} className=\"logo\" />\n      </a>\n\n      <div className=\"navLinks\">\n        {links.map((link, index) => (\n          <NavLink\n            style={({ isActive }) =>\n              isActive ? { color: \"#7F1922\", fontWeight: 1000 } : undefined\n            }\n            to={link.route}\n            className=\"links\"\n            key={index}\n          >\n            {link.name}\n          </NavLink>\n        ))}\n      </div>\n\n      <div className=\"right\">\n        {!isLoggedIn && !isSubscribed && <NavbarLogin />}\n        {isLoggedIn && !isSubscribed && <NavbarSubscribe />}\n        {isSubscribed && isLoggedIn && <NavbarNoButton />}\n      </div>\n    </nav>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Navbar/NavbarLogin.tsx",["276"],[],"import { NavLink, useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\";\n\nexport const NavbarLogin: React.FC = () => {\n  const navigate = useNavigate();\n  return (\n    <div>\n      <NavLink to=\"/Login\" className=\"links\" id=\"login\">\n        Login\n      </NavLink>\n      <button\n        className=\"navbar-button\"\n        id=\"sign-up\"\n        onClick={() => {\n          navigate(\"/Signup\");\n        }}\n      >\n        Sign Up\n      </button>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Navbar/NavbarNoButton.tsx",["277"],[],"import { NavLink } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport pfp from \"./Profile Picture.svg\";\n\nexport const NavbarNoButton: React.FC = () => {\n  return (\n    <div>\n      <NavLink to=\"/Profile\">\n        <img src={pfp} className=\"pfp\" />\n      </NavLink>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Navbar/NavbarSubscribe.tsx",["278"],[],"import { NavLink, useNavigate } from \"react-router-dom\";\nimport \"./Navbar.css\";\nimport pfp from \"./Profile Picture.svg\";\n\nexport const NavbarSubscribe: React.FC = () => {\n  const navigate = useNavigate();\n  return (\n    <div className=\"pfp-subscribe-class\">\n      <button\n        className=\"navbar-button\"\n        id=\"subscribe\"\n        onClick={() => {\n          navigate(\"/Subscribe\");\n        }}\n      >\n        Subscribe\n      </button>\n      <NavLink to=\"/Profile\">\n        <img src={pfp} className=\"pfp\" id=\"pfp-subscribe\" />\n      </NavLink>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/Routes.tsx",["279"],[],"import { Navbar } from \"./Navbar/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes as ReactRoutes,\n} from \"react-router-dom\";\nimport { Login } from \"../pages/Login\";\nimport { SignUp } from \"../pages/sign-up/SignUp\";\nimport { LandingPage } from \"../pages/LandingPage\";\nimport { Education } from \"../pages/Education\";\nimport { Homelessness } from \"../pages/Homelessness\";\nimport { Municipal } from \"../pages/Municipal\";\nimport { Subscribe } from \"../pages/Subscribe\";\nimport { Profile } from \"../pages/Profile\";\n\nexport const Routes: React.FC = () => {\n  return (\n    <Router>\n      <Navbar />\n      <ReactRoutes>\n        <Route path=\"/\" element={<LandingPage />} />\n        <Route path=\"/Education\" element={<Education />} />\n        <Route path=\"/Homelessness\" element={<Homelessness />} />\n        <Route path=\"/Municipal\" element={<Municipal />} />\n        <Route path=\"/Login\" element={<Login />} />\n        <Route path=\"/Signup\" element={<SignUp />} />\n        <Route path=\"/Subscribe\" element={<Subscribe />} />\n        <Route path=\"/Profile\" element={<Profile />} />\n      </ReactRoutes>\n    </Router>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/auth/LogInPage.tsx",["280"],[],"import { SetStateAction, useState } from \"react\";\nimport {\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n} from \"firebase/auth\";\nimport \"./auth.css\";\nimport { auth } from \"../../firebase-config\";\nimport { logInErrorHandler } from \"../../error_handling/auth-errors\";\nimport { useNavigate } from \"react-router-dom\";\n\nimport { GoogleAuthProvider, getAuth } from \"firebase/auth\";\nimport { signInWithRedirect, getRedirectResult } from \"firebase/auth\";\nimport { login } from \"../../slices/loginSlice\";\nimport { useDispatch } from \"react-redux\";\n\nexport const LogInPage = () => {\n  const [loginEmail, setLoginEmail] = useState(\"\");\n  const [loginPassword, setLoginPassword] = useState(\"\");\n  const [rememberUser, setRememberUser] = useState(false);\n  const [resetMessage, setResetMessage] = useState(\"\");\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  let [inputError, setInputError] = useState({\n    emailError: \"\",\n    passwordError: \"\",\n    unknownError: \"\",\n  });\n\n  const loginUser = async () => {\n    try {\n      inputError = {\n        emailError: \"\",\n        passwordError: \"\",\n        unknownError: \"\",\n      };\n\n      setInputError({\n        emailError: \"\",\n        passwordError: \"\",\n        unknownError: \"\",\n      });\n\n      if (loginPassword == \"\") {\n        inputError.passwordError = \"Type in a password.\";\n        setInputError(inputError);\n      }\n      const user = await signInWithEmailAndPassword(\n        auth,\n        loginEmail,\n        loginPassword\n      );\n\n      dispatch(login());\n      navigate(\"/\");\n    } catch (error) {\n      if (error instanceof Error) {\n        const errorMessage = logInErrorHandler(error);\n\n        inputError = { ...inputError, ...errorMessage };\n        setInputError({ ...inputError });\n      }\n    }\n  };\n\n  const sendReset = () => {\n    sendPasswordResetEmail(auth, loginEmail)\n      .then(() => {\n        setResetMessage(\"Reset email sent successfully to: \" + loginEmail);\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        setResetMessage(\n          errorMessage + \" (Try again, make sure to type email in email box)\"\n        );\n      });\n  };\n\n  const provider = new GoogleAuthProvider();\n  const auth_ = getAuth();\n\n  const loginWithGoogle = async () => {\n    signInWithRedirect(auth_, provider);\n    getRedirectResult(auth_)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access Google APIs.\n        // @ts-ignore: Object is possibly 'null'.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n\n        // @ts-ignore: Object is possibly 'null'.\n        const token = credential.accessToken;\n\n        // The signed-in user info.\n        // @ts-ignore: Object is possibly 'null'.\n        const user = result.user;\n\n        // IdP data available using getAdditionalUserInfo(result)\n        // ...\n\n        navigate(\"/\");\n      })\n      .catch((error) => {}); // end of catch\n  };\n\n  return (\n    <div>\n      <h1 className=\"signup-form-title\">Welcome Back</h1>\n\n      <div className=\"signup-form\">\n        <div className=\"input-boxes\">\n          <h3 className=\"textbox-label\">Email</h3>\n          <input\n            type=\"email\"\n            className={\n              inputError.emailError === \"\" ? \"text-input\" : \"text-input error\"\n            }\n            onChange={(event) => {\n              setLoginEmail(event.target.value);\n            }}\n          />\n          {inputError.emailError !== \"\" ? (\n            <p className=\"error-message\">{inputError.emailError}</p>\n          ) : (\n            \"\"\n          )}\n\n          <h3 className=\"textbox-label\">Password</h3>\n          <input\n            type=\"password\"\n            className={\n              inputError.passwordError === \"\"\n                ? \"text-input\"\n                : \"text-input error\"\n            }\n            onChange={(event) => {\n              setLoginPassword(event.target.value);\n            }}\n          />\n\n          {inputError.passwordError !== \"\" ? (\n            <p className=\"error-message\">{inputError.passwordError}</p>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"terms\">\n          <input\n            className=\"terms-checkbox\"\n            onChange={(event) => {\n              setRememberUser(event.target.checked);\n            }}\n            type=\"checkbox\"\n          />\n\n          <label className=\"terms-label\">Remember me?</label>\n        </div>\n\n        {inputError.unknownError !== \"\" ? (\n          <p className=\"error-message\">{inputError.unknownError}</p>\n        ) : (\n          \"\"\n        )}\n\n        <button onClick={loginUser} className=\"btn-signup\">\n          Login\n        </button>\n\n        <div className=\"separator\">\n          <div className=\"line\"></div>\n          <p className=\"or\">&nbsp; or &nbsp;</p>\n          <div className=\"line\"></div>\n        </div>\n\n        <div>\n          <button className=\"btn google-signup\">Log in With Google</button>\n        </div>\n\n        <div className=\"bottom-text\">\n          <p className=\"clickable-text\" onClick={sendReset}>\n            Forgot your password?\n          </p>\n\n          {resetMessage !== \"\" ? <p>{resetMessage}</p> : \"\"}\n\n          <p className=\"signup-link-text\">\n            Don't have an account?\n            <a className=\"clickable-text\" onClick={() => navigate(\"/Signup\")}>\n              {\" \"}\n              Sign up for free\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/auth/SignUpPage.tsx",["281"],[],"import { useState } from \"react\";\nimport { createUserWithEmailAndPassword, updateProfile } from \"firebase/auth\";\nimport \"./auth.css\";\nimport { auth } from \"../../firebase-config\";\nimport { registerUser } from \"../../api/auth\";\nimport { signUpErrorHandler } from \"../../error_handling/auth-errors\";\nimport { useNavigate } from \"react-router-dom\";\nimport { login } from \"../../slices/loginSlice\";\nimport { useDispatch } from \"react-redux\";\n\nimport { GoogleAuthProvider, getAuth } from \"firebase/auth\";\nimport { signInWithRedirect, getRedirectResult } from \"firebase/auth\";\n\nexport const SignUpPage = () => {\n  const [userDisplayName, setUserDisplayName] = useState(\"\");\n  const [registerEmail, setRegisterEmail] = useState(\"\");\n  const [registerPassword, setRegisterPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [agreedTerms, setAgreedTerms] = useState(false);\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  let [inputError, setInputError] = useState({\n    unknownError: \"\",\n    passwordError: \"\",\n    confirmError: \"\",\n    emailError: \"\",\n    nameError: \"\",\n  });\n\n  const register = async () => {\n    try {\n      inputError.unknownError = \"\";\n      inputError.passwordError = \"\";\n      inputError.confirmError = \"\";\n      inputError.emailError = \"\";\n      inputError.nameError = \"\";\n\n      let error = false;\n      //make sure passwords match.\n      if (!(confirmPassword === registerPassword)) {\n        inputError.confirmError = \"Passwords do not match.\";\n        error = true;\n      }\n\n      if (userDisplayName === \"\") {\n        inputError.nameError = \"Please enter your full name.\";\n        error = true;\n      }\n\n      if (!agreedTerms) {\n        inputError.unknownError =\n          \"Must agree to the terms and services to register.\";\n        error = true;\n      }\n\n      setInputError({\n        ...inputError,\n      });\n\n      if (!error) {\n        const userCredential = await createUserWithEmailAndPassword(\n          auth,\n          registerEmail,\n          registerPassword\n        );\n\n        await updateProfile(userCredential.user, {\n          displayName: userDisplayName,\n        });\n\n        await registerUser(userCredential);\n\n        dispatch(login());\n        navigate(\"/\");\n      }\n    } catch (error) {\n      if (error instanceof Error) {\n        const errorMessage = signUpErrorHandler(error);\n\n        inputError = { ...inputError, ...errorMessage };\n        setInputError({ ...inputError });\n      }\n    }\n  };\n\n  const provider = new GoogleAuthProvider();\n  const auth_ = getAuth();\n\n  const loginWithGoogle = async () => {\n    signInWithRedirect(auth_, provider);\n    getRedirectResult(auth_)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access Google APIs.\n        // @ts-ignore: Object is possibly 'null'.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n\n        // @ts-ignore: Object is possibly 'null'.\n        const token = credential.accessToken;\n\n        // The signed-in user info.\n        // @ts-ignore: Object is possibly 'null'.\n        const user = result.user;\n\n        // IdP data available using getAdditionalUserInfo(result)\n        // ...\n\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        // const errorCode = error.code;\n        // const errorMessage = error.message;\n        // // The email of the user's account used.\n        // const email = error.customData.email;\n        // // The AuthCredential type that was used.\n        // const credential = GoogleAuthProvider.credentialFromError(error);\n        /*\n         *\n         *\n         * REDIRECT MODE\n         * This error is handled in a similar way in the redirect mode, with the difference\n         * that the pending credential has to be cached between page redirects (for example,\n         * using session storage).\n         *\n         */\n        // User's email already exists.\n        // if (error.code === 'auth/account-exists-with-different-credential') {\n        //   // The pending Google credential.\n        //   var pendingCred = error.credential;\n        //   // The provider account's email address.\n        //   var email = error.email;\n        //   // Get sign-in methods for this email.\n        //   auth_.fetchSignInMethodsForEmail(email).then(function(methods) {\n        //     // If the user has several sign-in methods,\n        //     // the first method in the list will be the \"recommended\" method to use.\n        //     if (methods[0] === 'password') {\n        //       // Asks the user their password.\n        //       // TODO: handle this asynchronously.\n        //       var password = promptUserForPassword(); // TODO: implement promptUserForPassword.\n        //       auth_.signInWithEmailAndPassword(email, password).then(function(result) {\n        //         return result.user.linkWithCredential(pendingCred);\n        //       }).then(function() {\n        //         // Google account successfully linked to the existing Firebase user.\n        //         // goToApp();\n        //         navigate(\"/\");\n        //       });\n        //       return;\n        //     }\n        //     // All the other cases are external providers.\n        //     // Construct provider object for that provider.\n        //     // TODO: implement getProviderForProviderId.\n        //     var provider = getProviderForProviderId(methods[0]);\n        //     // At this point, you should let the user know that they already have an account\n        //     // but with a different provider, and let them validate the fact they want to\n        //     // sign in with this provider.\n        //     // Sign in to provider. Note: browsers usually block popup triggered asynchronously,\n        //     // so in real scenario you should ask the user to click on a \"continue\" button\n        //     // that will trigger the signInWithPopup.\n        //     auth_.signInWithPopup(provider).then(function(result) {\n        //       // Remember that the user may have signed in with an account that has a different email\n        //       // address than the first one. This can happen as Firebase doesn't control the provider's\n        //       // sign in flow and the user is free to login using whichever account they own.\n        //       // Link to Google credential.\n        //       // As we have access to the pending credential, we can directly call the link method.\n        //       result.user.linkAndRetrieveDataWithCredential(pendingCred).then(function(usercred) {\n        //         // Google account successfully linked to the existing Firebase user.\n        //         // goToApp();\n        //         navigate(\"/\");\n        //       });\n        //     });\n        //   });\n        // }\n      }); // end of catch\n  };\n\n  return (\n    <div>\n      <h1 className=\"signup-form-title\">Create Your Account</h1>\n\n      <div className=\"signup-form\">\n        <div className=\"input-boxes\">\n          {/* Name input */}\n          <h3 className=\"textbox-label\">Full Name</h3>\n          <input\n            className={\n              inputError.nameError === \"\" ? \"text-input\" : \"text-input error\"\n            }\n            type=\"fullname\"\n            onChange={(event) => {\n              setUserDisplayName(event.target.value);\n            }}\n          />\n          {inputError.nameError !== \"\" ? (\n            <p className=\"error-message\">{inputError.nameError}</p>\n          ) : (\n            \"\"\n          )}\n\n          {/* Email input */}\n          <h3 className=\"textbox-label\">Email</h3>\n          <input\n            className={\n              inputError.emailError === \"\" ? \"text-input\" : \"text-input error\"\n            }\n            type=\"email\"\n            onChange={(event) => {\n              setRegisterEmail(event.target.value);\n            }}\n          />\n          {inputError.emailError !== \"\" ? (\n            <p className=\"error-message\">{inputError.emailError}</p>\n          ) : (\n            \"\"\n          )}\n\n          {/* Password input */}\n          <h3 className=\"textbox-label\">Password</h3>\n          <input\n            className={\n              inputError.passwordError === \"\"\n                ? \"text-input\"\n                : \"text-input error\"\n            }\n            type=\"password\"\n            onChange={(event) => {\n              setRegisterPassword(event.target.value);\n            }}\n          />\n          {inputError.passwordError !== \"\" ? (\n            <p className=\"error-message\">{inputError.passwordError}</p>\n          ) : (\n            \"\"\n          )}\n\n          {/* Confirm password */}\n          <h3 className=\"textbox-label\">Confirm Password</h3>\n          <input\n            className={\n              inputError.confirmError === \"\" ? \"text-input\" : \"text-input error\"\n            }\n            type=\"password\"\n            onChange={(event) => {\n              setConfirmPassword(event.target.value);\n            }}\n          />\n          {inputError.confirmError !== \"\" ? (\n            <p className=\"error-message\">{inputError.confirmError}</p>\n          ) : (\n            \"\"\n          )}\n        </div>\n\n        <div className=\"terms\">\n          <input\n            className=\"terms-checkbox\"\n            onChange={(event) => {\n              setAgreedTerms(event.target.checked);\n            }}\n            type=\"checkbox\"\n          />\n\n          <label className=\"terms-label\">\n            I agree to the <a href=\"/\">Terms of Service</a> and{\" \"}\n            <a href=\"/\">Privacy Policy</a>\n          </label>\n        </div>\n\n        {inputError.unknownError !== \"\" ? (\n          <p className=\"error-message\">{inputError.unknownError}</p>\n        ) : (\n          \"\"\n        )}\n\n        <button onClick={register} className=\"btn-signup\">\n          Sign Up\n        </button>\n\n        <div className=\"separator\">\n          <div className=\"line\"></div>\n          <p className=\"or\">&nbsp; or &nbsp;</p>\n          <div className=\"line\"></div>\n        </div>\n\n        <div>\n          <button onClick={loginWithGoogle} className=\"btn google-signup\">\n            Sign in with Google\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/signup.tsx",["282"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nimport { style, textStyle } from \"./styleObjects/signupStyle\";\nimport {\n  exitButtonStyle,\n  titleStyle,\n  buttonStyle,\n} from \"./styleObjects/modals\";\n\ninterface ModalProps {\n  show: boolean;\n  setShow: (show: boolean) => void;\n}\n\nexport const SignupModal: React.FC<ModalProps> = (props: ModalProps) => {\n  const handleOpen = (): void => {\n    props.setShow(true);\n  };\n  const handleClose = (): void => {\n    props.setShow(false);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleOpen}>Open modal</Button>\n      <Modal\n        open={props.show}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={handleClose}\n            sx={exitButtonStyle}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={titleStyle}\n          >\n            Become a member now!\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={textStyle}>\n            Create an account and subscribe to get exclusive access to\n            statistical documents, resources, and data visualizations!\n          </Typography>\n          <Button variant=\"contained\" disableElevation sx={buttonStyle}>\n            Sign Up Today!\n          </Button>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/styleObjects/modals.tsx",["283"],[],"export const exitButtonStyle = {\n  // location styling\n  position: \"absolute\" as \"absolute\",\n  left: \"92.96%\",\n  right: \"3.2%\",\n  top: \"5.97%\",\n  bottom: \"88.36%\",\n  color: \"black\",\n};\n\nexport const titleStyle = {\n  // location styling\n  width: \"456px\",\n  height: \"49px\",\n  lineHeight: \"49px\",\n  textAlign: \"center\",\n  order: 0,\n  zIndex: 0,\n  // font styling\n  fontFamily: \"sans-serif\",\n  fontStyle: \"normal\",\n  fontWeight: 700,\n  fontSize: \"39px\",\n  color: \"#C3272E\",\n};\n\nexport const buttonStyle = {\n  // location styling\n  width: \"465px\",\n  height: \"48px\",\n  mt: \"40px\",\n  order: 2,\n  // button styling\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  padding: \"0px\",\n  gap: \"10px\",\n  background: \"#C3272E\",\n  // font styling\n  fontFamily: \"sans-serif\",\n  fontSize: \"18px\",\n  textTransform: \"none\",\n  // border styling\n  borderRadius: \"4px\",\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/styleObjects/signupStyle.tsx",["284"],[],"export const style = {\n  // location styling\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"625px\",\n  height: \"423px\",\n  // box formatting\n  bgcolor: \"background.paper\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  position: \"relative\",\n  // border styling\n  border: \"2px solid #000\",\n  borderRadius: \"8px\",\n  boxShadow: 24,\n};\n\nexport const textStyle = {\n  // location styling\n  width: \"465px\",\n  height: \"86px\",\n  order: 1,\n  flexGrow: 0,\n  zIndex: 1,\n  mt: \"40px\",\n  // font styling\n  fontFamily: \"sans-serif\",\n  fontStyle: \"normal\",\n  fontWeight: 400,\n  fontSize: \"20px\",\n  lineHeight: \"27px\",\n  textAlign: \"center\",\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/styleObjects/subscribeStyle.tsx",["285"],[],"export const style = {\n  // location styling\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: \"625px\",\n  height: \"445px\",\n  // box formatting\n  bgcolor: \"background.paper\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  position: \"relative\",\n  // border styling\n  border: \"2px solid #000\",\n  borderRadius: \"8px\",\n  boxShadow: 24,\n};\n\nexport const textStyle = {\n  // location styling\n  width: \"465px\",\n  height: \"108px\",\n  order: 1,\n  flexGrow: 0,\n  zIndex: 1,\n  mt: \"40px\",\n  // font styling\n  fontFamily: \"sans-serif\",\n  fontStyle: \"normal\",\n  fontWeight: 400,\n  fontSize: \"20px\",\n  lineHeight: \"27px\",\n  textAlign: \"center\",\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/components/modal/subscribe.tsx",["286"],[],"import * as React from \"react\";\nimport Box from \"@mui/material/Box\";\nimport Button from \"@mui/material/Button\";\nimport Typography from \"@mui/material/Typography\";\nimport Modal from \"@mui/material/Modal\";\nimport IconButton from \"@mui/material/IconButton\";\nimport CloseIcon from \"@mui/icons-material/Close\";\n\nimport { style, textStyle } from \"./styleObjects/subscribeStyle\";\nimport {\n  exitButtonStyle,\n  titleStyle,\n  buttonStyle,\n} from \"./styleObjects/modals\";\n\ninterface ModalProps {\n  show: boolean;\n  setShow: (show: boolean) => void;\n}\n\nexport const SubscribeModal: React.FC<ModalProps> = (props: ModalProps) => {\n  const handleOpen = (): void => {\n    props.setShow(true);\n  };\n  const handleClose = (): void => {\n    props.setShow(false);\n  };\n\n  return (\n    <div>\n      <Button onClick={handleOpen}>Open modal</Button>\n      <Modal\n        open={props.show}\n        onClose={handleClose}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <IconButton\n            aria-label=\"delete\"\n            onClick={handleClose}\n            sx={exitButtonStyle}\n          >\n            <CloseIcon />\n          </IconButton>\n          <Typography\n            id=\"modal-modal-title\"\n            variant=\"h6\"\n            component=\"h2\"\n            sx={titleStyle}\n          >\n            Get unlimited access!\n          </Typography>\n          <Typography id=\"modal-modal-description\" sx={textStyle}>\n            This data visualization can only be viewed by members with paid\n            subscriptions. Subscribe to get exclusive access to statistical\n            documents, resources, and data visualizations!\n          </Typography>\n          <Button variant=\"contained\" disableElevation sx={buttonStyle}>\n            Subscribe Today!\n          </Button>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/error_handling/auth-errors.tsx",["287"],[],"const signUpErrorHandler = (error: Error) => {\n  const errorMessage = error.message;\n\n  if (errorMessage.includes(\"internal-error\")) {\n    return {\n      unknownError:\n        \"Internal error. Make sure you have typed a valid password.\",\n    };\n  } else if (errorMessage.includes(\"invalid-email\")) {\n    return {\n      emailError: \"The email is invalid. Try again with a valid email.\",\n    };\n  } else if (errorMessage.includes(\"weak-password\")) {\n    return {\n      passwordError:\n        \"The password is invalid. It should be at least 6 characters.\",\n    };\n  } else if (errorMessage.includes(\"email-already-in-use\")) {\n    return {\n      emailError:\n        \"This email is already in use. Try signing in or using a different email.\",\n    };\n  } else {\n    return { unknownError: errorMessage };\n  }\n};\n\nconst logInErrorHandler = (error: Error) => {\n  const errorMessage = error.message;\n\n  if (errorMessage.includes(\"user-not-found\")) {\n    return { emailError: \"A user has not been found with this email.\" };\n  } else if (errorMessage.includes(\"invalid-email\")) {\n    return {\n      emailError: \"The email is invalid. Try again with a valid email.\",\n    };\n  } else if (errorMessage.includes(\"wrong-password\")) {\n    return { passwordError: \"Wrong password.\" };\n  } else if (errorMessage.includes(\"internal-error\")) {\n    return {\n      unkownError: \"Internal error. Make sure you have typed a valid password.\",\n    };\n  } else {\n    return { unknownError: errorMessage };\n  }\n};\n\nexport { signUpErrorHandler, logInErrorHandler };\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/firebase-config.js",["288","289","290","291","292","293","294","295","296","297","298","299","300","301","302"],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/index.tsx",["303"],[],"import React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./app/store\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\nconst container = document.getElementById(\"root\")!;\nconst root = createRoot(container);\n\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Education.tsx",["304"],[],"export const Education: React.FC = () => {\n  return (\n    <div>\n      <h1>Education</h1>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Homelessness.tsx",["305"],[],"export const Homelessness: React.FC = () => {\n  return (\n    <div>\n      <h1>Homelessness</h1>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/LandingPage.tsx",["306"],[],"import React from \"react\";\nimport { Body } from \"../components/Landing_Page/Body\";\nimport { Footer } from \"../components/Footer/Footer\";\n\nexport const LandingPage: React.FC = () => {\n  return (\n    <div className=\"LandingPage\">\n      <Body />\n      <Footer />\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Login.tsx",["307"],[],"import { LogInPage } from \"../components/auth/LogInPage\";\n\nexport const Login: React.FC = () => {\n  return (\n    <div>\n      <LogInPage />\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Municipal.tsx",["308"],[],"export const Municipal: React.FC = () => {\n  return (\n    <div>\n      <h1>Municipal</h1>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Profile.tsx",["309"],[],"export const Profile: React.FC = () => {\n  return (\n    <div>\n      <h1>Profile</h1>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/Subscribe.tsx",["310"],[],"export const Subscribe: React.FC = () => {\n  return (\n    <div>\n      <h1>Subscribe</h1>\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/pages/sign-up/SignUp.tsx",["311"],[],"import { Sign } from \"crypto\";\nimport { SignUpPage } from \"../../components/auth/SignUpPage\";\n\nexport const SignUp: React.FC = () => {\n  return (\n    <div>\n      <SignUpPage />\n    </div>\n  );\n};\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/react-app-env.d.ts",["312"],[],"/// <reference types=\"react-scripts\" />\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/reportWebVitals.ts",["313"],[],"import { type ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry != null && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/sagas/exampleSaga.ts",["314"],[],"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\n\n// The following is an example of a worker saga from https://redux-saga.js.org/docs/introduction/GettingStarted\n// We will import the appropriate API functions that call our backend here and then use them in the Saga.\n// Note that in our case, we don't explicitly create the action type names since they are created for us by Redux toolkit\n// An action type can be obtained by calling the action creator and appending .type Ex: long().type\n\n// import Api from '...'\n\n// // worker Saga: will be fired on USER_FETCH_REQUESTED actions\n// function* fetchUser(action) {\n//   try {\n//     const user = yield call(Api.fetchUser, action.payload.userId)\n//     yield put({ type: 'USER_FETCH_SUCCEEDED', user: user })\n//   } catch (e) {\n//     yield put({ type: 'USER_FETCH_FAILED', message: e.message })\n//   }\n// }\n\nconst fetchUser = () => {};\n\n/*\n  Starts fetchUser on each dispatched `USER_FETCH_REQUESTED` action.\n  Allows concurrent fetches of user.\n*/\nfunction* mySaga() {\n  yield takeEvery(\"USER_FETCH_REQUESTED\", fetchUser);\n}\n\nexport default mySaga;\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/setupTests.ts",["315"],[],"// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport \"@testing-library/jest-dom/extend-expect\";\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/slices/loginSlice.tsx",["316"],[],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { type RootState } from \"../app/store\";\n\nexport interface LoginState {\n  value: boolean;\n}\n\nconst initialState: LoginState = {\n  value: false,\n};\n\nexport const loginSlice = createSlice({\n  name: \"login\",\n  initialState,\n  reducers: {\n    login: (state) => {\n      state.value = true;\n    },\n    logout: (state) => {\n      state.value = false;\n    },\n  },\n});\n\nexport const { login, logout } = loginSlice.actions;\n\nexport const selectLogin = (state: RootState): boolean => state.login.value;\n\nexport default loginSlice.reducer;\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/SDCTA/src/slices/subscribeSlice.tsx",["317"],[],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { type RootState } from \"../app/store\";\n\nexport interface SubscribeState {\n  value: boolean;\n}\n\nconst initialState: SubscribeState = {\n  value: false,\n};\n\nexport const subscribeSlice = createSlice({\n  name: \"subscribe\",\n  initialState,\n  reducers: {\n    subscribe: (state) => {\n      state.value = true;\n    },\n    unsubscribe: (state) => {\n      state.value = false;\n    },\n  },\n});\n\nexport const { subscribe, unsubscribe } = subscribeSlice.actions;\n\nexport const selectSubscribe = (state: RootState): boolean =>\n  state.subscribe.value;\n\nexport default subscribeSlice.reducer;\n","/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/index.js",[],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/models/category.js",[],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/models/tier.js",[],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/models/user.js",[],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/models/visualization.js",[],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/routes/category.js",[],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/routes/tier.js",[],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/routes/user.js",["318","319","320"],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/routes/visualization.js",[],[],"/Users/nirmalagnihotri/Documents/GitHub/SDCTA-Data-Visualization-Website/server/services/tier.js",["321","322"],[],{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":"324","severity":2,"message":"325","line":1,"column":31,"nodeType":"326","messageId":"327","endLine":1,"endColumn":45,"fix":"328"},{"ruleId":"329","severity":2,"message":"330","line":1,"column":45,"nodeType":"331","messageId":"332","endLine":1,"endColumn":46,"fix":"333"},{"ruleId":"324","severity":2,"message":"325","line":2,"column":25,"nodeType":"326","messageId":"327","endLine":2,"endColumn":40,"fix":"334"},{"ruleId":"329","severity":2,"message":"330","line":2,"column":40,"nodeType":"331","messageId":"332","endLine":2,"endColumn":41,"fix":"335"},{"ruleId":"324","severity":2,"message":"325","line":4,"column":11,"nodeType":"326","messageId":"327","endLine":4,"endColumn":52,"fix":"336"},{"ruleId":"324","severity":2,"message":"325","line":5,"column":15,"nodeType":"326","messageId":"327","endLine":5,"endColumn":57,"fix":"337"},{"ruleId":"324","severity":2,"message":"325","line":6,"column":14,"nodeType":"326","messageId":"327","endLine":6,"endColumn":40,"fix":"338"},{"ruleId":"324","severity":2,"message":"325","line":7,"column":18,"nodeType":"326","messageId":"327","endLine":7,"endColumn":56,"fix":"339"},{"ruleId":"324","severity":2,"message":"325","line":8,"column":22,"nodeType":"326","messageId":"327","endLine":8,"endColumn":36,"fix":"340"},{"ruleId":"324","severity":2,"message":"325","line":9,"column":10,"nodeType":"326","messageId":"327","endLine":9,"endColumn":53,"fix":"341"},{"ruleId":"324","severity":2,"message":"325","line":10,"column":18,"nodeType":"326","messageId":"327","endLine":10,"endColumn":32,"fix":"342"},{"ruleId":"343","severity":2,"message":"344","line":10,"column":32,"nodeType":"345","messageId":"346","endLine":10,"endColumn":33,"fix":"347"},{"ruleId":"329","severity":2,"message":"330","line":11,"column":2,"nodeType":"348","messageId":"332","endLine":11,"endColumn":3,"fix":"349"},{"ruleId":"329","severity":2,"message":"330","line":12,"column":42,"nodeType":"348","messageId":"332","endLine":12,"endColumn":43,"fix":"350"},{"ruleId":"329","severity":2,"message":"330","line":13,"column":33,"nodeType":"348","messageId":"332","endLine":13,"endColumn":34,"fix":"351"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":null,"fatal":true,"severity":2,"message":"323"},{"ruleId":"352","severity":2,"message":"353","line":39,"column":24,"nodeType":"354","messageId":"355","endLine":39,"endColumn":29},{"ruleId":"352","severity":2,"message":"353","line":53,"column":26,"nodeType":"354","messageId":"355","endLine":53,"endColumn":31},{"ruleId":"352","severity":2,"message":"353","line":65,"column":24,"nodeType":"354","messageId":"355","endLine":65,"endColumn":29},{"ruleId":"356","severity":2,"message":"357","line":4,"column":34,"nodeType":"358","messageId":"359","endLine":4,"endColumn":35,"fix":"360"},{"ruleId":"352","severity":2,"message":"361","line":10,"column":7,"nodeType":"354","messageId":"355","endLine":10,"endColumn":10},"Parsing error: Cannot read file '/users/nirmalagnihotri/documents/github/sdcta-data-visualization-website/tsconfig.json'.","quotes","Strings must use singlequote.","Literal","wrongQuotes",{"range":"362","text":"363"},"semi","Extra semicolon.","ImportDeclaration","extraSemi",{"range":"364","text":"365"},{"range":"366","text":"367"},{"range":"368","text":"369"},{"range":"370","text":"371"},{"range":"372","text":"373"},{"range":"374","text":"375"},{"range":"376","text":"377"},{"range":"378","text":"379"},{"range":"380","text":"381"},{"range":"382","text":"383"},"comma-dangle","Unexpected trailing comma.","Property","unexpected",{"range":"384","text":"385"},"VariableDeclaration",{"range":"386","text":"387"},{"range":"388","text":"389"},{"range":"390","text":"391"},"no-undef","'Model' is not defined.","Identifier","undef","space-before-function-paren","Missing space before function parentheses.","FunctionExpression","missingSpace",{"range":"392","text":"393"},"'res' is not defined.",[30,44],"'firebase/app'",[30,52],"\"firebase/app\"\nimport",[70,85],"'firebase/auth'",[70,92],"\"firebase/auth\"\nconst",[122,163],"'AIzaSyCC2YJXsNli1CzIbR3hwK5OUAQbazlGUsE'",[179,221],"'sdcta-visualization-auth.firebaseapp.com'",[236,262],"'sdcta-visualization-auth'",[281,319],"'sdcta-visualization-auth.appspot.com'",[342,356],"'670464076427'",[367,410],"'1:670464076427:web:84f845d72220158af7c28e'",[429,443],"'G-ZNSQ7WTCM0'",[429,446],"\"G-ZNSQ7WTCM0\"\n}",[445,453],"}\nconst",[488,497],")\nexport",[522,524],")",[94,94]," "]